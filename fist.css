#fist {
	background-color: #0a0000; /* Darker red-tinted black */
	box-shadow: 0 0 20px rgba(255, 0, 0, 0.5) inset;
	position: relative;
}



/* All the body-level effects should only apply when .anger-active is present */
body.anger-active {
	cursor: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="red" stroke-width="2"><path d="M20 10L4 20L8 10L4 0L20 10Z"/></svg>'),
		auto;
	animation: heartbeat 4s infinite;
}

/* Enhance center glow with more aggressive pulse */
#fist::after {
	content: "";
	position: absolute;
	top: 50%;
	left: 50%;
	width: 300px;
	height: 300px;
	transform: translate(-50%, -50%);
	background: radial-gradient(
		circle,
		rgba(255, 30, 0, 0.4) 0%,
		rgba(200, 0, 0, 0.2) 30%,
		rgba(180, 0, 0, 0.1) 60%,
		rgba(0, 0, 0, 0) 80%
	);
	pointer-events: none;
	z-index: -1;
	animation: angryPulse 1.5s infinite alternate;
	filter: blur(5px);
}

/* More aggressive pulsing animation */
@keyframes angryPulse {
	0% {
		opacity: 0.7;
		transform: translate(-50%, -50%) scale(0.9);
	}
	50% {
		opacity: 0.9;
		transform: translate(-50%, -50%) scale(1.1);
	}
	100% {
		opacity: 1;
		transform: translate(-50%, -50%) scale(1);
	}
}

/* Add a blood-like splatter effect to corners */
body.anger-active::before,
body.anger-active::after {
	content: "";
	position: absolute;
	width: 200px;
	height: 200px;
	background-size: contain;
	background-repeat: no-repeat;
	z-index: 10;
	opacity: 0.7;
	pointer-events: none;
}

body.anger-active::before {
	top: -50px;
	left: -50px;
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200"><path d="M0,0 C50,20 80,20 100,80 C120,40 180,30 200,0 L0,0 Z" fill="darkred"/></svg>');
	animation: angryTremor 2s infinite alternate;
}

body.anger-active::after {
	bottom: -50px;
	right: -50px;
	background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="200" height="200" viewBox="0 0 200 200"><path d="M200,200 C150,180 120,180 100,120 C80,160 20,170 0,200 L200,200 Z" fill="darkred"/></svg>');
	animation: angryTremor 2.3s infinite alternate-reverse;
}

/* Add subtle tremor animation */
@keyframes angryTremor {
	0% {
		transform: translateX(-2px) translateY(-2px) rotate(-1deg);
	}
	25% {
		transform: translateX(2px) translateY(0px) rotate(0deg);
	}
	50% {
		transform: translateX(0px) translateY(2px) rotate(1deg);
	}
	75% {
		transform: translateX(-1px) translateY(-1px) rotate(0deg);
	}
	100% {
		transform: translateX(1px) translateY(-1px) rotate(-1deg);
	}
}

/* Add a heartbeat animation to the whole page */
@keyframes heartbeat {
	0% {
		transform: scale(1);
	}
	2% {
		transform: scale(1.01);
	}
	4% {
		transform: scale(1);
	}
	6% {
		transform: scale(1.01);
	}
	8% {
		transform: scale(1);
	}
	100% {
		transform: scale(1);
	}
}

/* Add angry text */
.rage-title {
	position: fixed;
	top: 10px;
	left: 50%;
	transform: translateX(-50%);
	color: darkred;
	font-family: Impact, sans-serif;
	font-size: 24px;
	text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
	text-transform: uppercase;
	letter-spacing: 3px;
	pointer-events: none;
	z-index: 100;
	opacity: 0;
	animation: fadeInOut 10s infinite;
}

@keyframes fadeInOut {
	0%,
	90%,
	100% {
		opacity: 0;
	}
	10%,
	80% {
		opacity: 1;
	}
}

/* Add reflection effect for glass shards */
@keyframes reflectionShimmer {
	0% {
		opacity: 0.3;
	}
	50% {
		opacity: 0.8;
	}
	100% {
		opacity: 0.3;
	}
}

/* Add screen reset flash effect */
@keyframes screenReset {
	0% {
		filter: brightness(1);
	}
	50% {
		filter: brightness(3);
	}
	100% {
		filter: brightness(1);
	}
}

.screen-reset-flash {
	position: absolute;
	top: 0;
	left: 0;
	width: 100%;
	height: 100%;
	background-color: white;
	opacity: 0;
	pointer-events: none;
	z-index: 1000;
}

/* Modify rage title animation for glass break */
.rage-title.breaking {
	animation: rageBreak 1s forwards;
	text-shadow: 0 0 10px rgba(255, 0, 0, 0.8);
}

@keyframes rageBreak {
	0% {
		transform: translateX(-50%) scale(1);
	}
	50% {
		transform: translateX(-50%) scale(1.5);
		opacity: 0.8;
		filter: blur(2px);
	}
	70% {
		opacity: 0.4;
	}
	100% {
		transform: translateX(-50%) scale(0.8) rotate(5deg);
		opacity: 0;
	}
}

/* Hide fist elements when cooldown is active */
body.anger-cooldown .fist-element,
body.anger-cooldown #fist::after,
body.anger-cooldown .rage-title {
	display: none !important;
	opacity: 0 !important;
	animation: none !important;
}

/* Reset cursor during cooldown */
body.anger-cooldown {
	cursor: default;
	animation: none;
}

body.anger-cooldown::before,
body.anger-cooldown::after {
	display: none !important;
}

/* Add a fade-in effect when returning from cooldown */
body.anger-active.was-cooldown .fist-element {
	animation: fadeInFromCooldown 1s forwards;
}

@keyframes fadeInFromCooldown {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}	